name: Deploy Werkzeugkiste!

on:
  pull_request:
    types: [closed]
    branches: [ main ]

  workflow_dispatch:
    inputs:
      question:
        description: 'NextJS on top?'
        required: false
        default: 'FR'
        type: choice
        options:
          - 'FR'
          - 'FR FR'

jobs:
  docker-build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/werkzeugkiste-frontend:latest

      - name: Build and Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/werkzeugkiste-backend:latest

  deploy-on-server:
    needs: docker-build-push
    runs-on: ubuntu-latest

    steps:
      - name: Install Wireguard
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard-tools

      - name: Setup Wireguard Configuration
        run: |
          sudo mkdir -p /etc/wireguard
          echo "${{ secrets.VPN_CONFIG }}" | sudo tee /etc/wireguard/wg0.conf > /dev/null
          sudo chmod 600 /etc/wireguard/wg0.conf

      - name: Connect to Wireguard
        run: |
          sudo wg-quick up wg0
          sleep 10
          sudo wg show
      

      - name: Deploy on Server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd "${{ secrets.HOMELAB_PATH }}"
            sudo docker compose up -d --pull always